// ==========================================================================
// Project:  Ember Data
// Copyright: Â©2011 Living Social Inc. and contributors.
// License:   Licensed under MIT license (see license.js)
// ==========================================================================


(function(a){window.DS=Ember.Namespace.create({CURRENT_API_REVISION:1})})({}),function(a){DS.Adapter=Ember.Object.extend({commit:function(a,b){b.updated.eachType(function(b,c){this.updateRecords(a,b,c.slice())},this),b.created.eachType(function(b,c){this.createRecords(a,b,c.slice())},this),b.deleted.eachType(function(b,c){this.deleteRecords(a,b,c.slice())},this)},createRecords:function(a,b,c){c.forEach(function(c){this.createRecord(a,b,c)},this)},updateRecords:function(a,b,c){c.forEach(function(c){this.updateRecord(a,b,c)},this)},deleteRecords:function(a,b,c){c.forEach(function(c){this.deleteRecord(a,b,c)},this)},findMany:function(a,b,c){c.forEach(function(c){this.find(a,b,c)},this)}})}({}),function(a){DS.fixtureAdapter=DS.Adapter.create({find:function(a,b,c){var d=b.FIXTURES;if(d.hasLoaded)return;setTimeout(function(){a.loadMany(b,d),d.hasLoaded=!0},300)},findMany:function(){this.find.apply(this,arguments)},findAll:function(a,b){var c=b.FIXTURES,d=c.map(function(a,b,c){return a.id});a.loadMany(b,d,c)}})}({}),function(a){var b=Ember.get,c=Ember.set,d=Ember.getPath;DS.RESTAdapter=DS.Adapter.extend({createRecord:function(a,b,c){var d=this.rootForType(b),e={};e[d]=c.toJSON(),this.ajax(this.buildURL(d),"POST",{data:e,success:function(e){this.sideload(a,b,e,d),a.didCreateRecord(c,e[d])}})},createRecords:function(a,c,d){if(b(this,"bulkCommit")===!1)return this._super(a,c,d);var e=this.rootForType(c),f=this.pluralize(e),g={};g[f]=d.map(function(a){return a.toJSON()}),this.ajax(this.buildURL(e),"POST",{data:g,success:function(b){this.sideload(a,c,b,f),a.didCreateRecords(c,d,b[f])}})},updateRecord:function(a,c,d){var e=b(d,"id"),f=this.rootForType(c),g={};g[f]=d.toJSON(),this.ajax(this.buildURL(f,e),"PUT",{data:g,success:function(b){this.sideload(a,c,b,f),a.didUpdateRecord(d,b&&b[f])}})},updateRecords:function(a,c,d){if(b(this,"bulkCommit")===!1)return this._super(a,c,d);var e=this.rootForType(c),f=this.pluralize(e),g={};g[f]=d.map(function(a){return a.toJSON()}),this.ajax(this.buildURL(e,"bulk"),"PUT",{data:g,success:function(b){this.sideload(a,c,b,f),a.didUpdateRecords(d,b[f])}})},deleteRecord:function(a,c,d){var e=b(d,"id"),f=this.rootForType(c);this.ajax(this.buildURL(f,e),"DELETE",{success:function(b){b&&this.sideload(a,c,b),a.didDeleteRecord(d)}})},deleteRecords:function(a,c,d){if(b(this,"bulkCommit")===!1)return this._super(a,c,d);var e=this.rootForType(c),f=this.pluralize(e),g={};g[f]=d.map(function(a){return b(a,"id")}),this.ajax(this.buildURL(e,"bulk"),"DELETE",{data:g,success:function(b){b&&this.sideload(a,c,b),a.didDeleteRecords(d)}})},find:function(a,b,c){var d=this.rootForType(b);this.ajax(this.buildURL(d,c),"GET",{success:function(c){a.load(b,c[d]),this.sideload(a,b,c,d)}})},findMany:function(a,b,c){var d=this.rootForType(b),e=this.pluralize(d);this.ajax(this.buildURL(d),"GET",{data:{ids:c},success:function(d){a.loadMany(b,c,d[e]),this.sideload(a,b,d,e)}})},findAll:function(a,b){var c=this.rootForType(b),d=this.pluralize(c);this.ajax(this.buildURL(c),"GET",{success:function(c){a.loadMany(b,c[d]),this.sideload(a,b,c,d)}})},findQuery:function(a,b,c,d){var e=this.rootForType(b),f=this.pluralize(e);this.ajax(this.buildURL(e),"GET",{data:c,success:function(c){d.load(c[f]),this.sideload(a,b,c,f)}})},plurals:{},pluralize:function(a){return this.plurals[a]||a+"s"},rootForType:function(a){if(a.url)return a.url;var b=a.toString().split("."),c=b[b.length-1];return c.replace(/([A-Z])/g,"_$1").toLowerCase().slice(1)},ajax:function(a,b,c){c.url=a,c.type=b,c.dataType="json",c.contentType="application/json",c.context=this,c.data&&b!=="GET"&&(c.data=JSON.stringify(c.data)),jQuery.ajax(c)},sideload:function(a,c,d,e){var f,g;for(var h in d){if(!d.hasOwnProperty(h))continue;if(h===e)continue;f=c.typeForAssociation(h),f||(g=b(this,"mappings"),f=b(b(this,"mappings"),h)),this.loadValue(a,f,d[h])}},loadValue:function(a,b,c){c instanceof Array?a.loadMany(b,c):a.load(b,c)},buildURL:function(a,b){var c=[""];return this.namespace!==undefined&&c.push(this.namespace),c.push(this.pluralize(a)),b!==undefined&&c.push(b),c.join("/")}})}({}),function(a){var b=Ember.get,c=Ember.set;DS.ModelArray=Ember.ArrayProxy.extend({type:null,content:null,store:null,init:function(){c(this,"modelCache",Ember.A([])),this._super()},arrayDidChange:function(a,c,d,e){var f=b(this,"modelCache");f.replace(c,0,new Array(e)),this._super(a,c,d,e)},arrayWillChange:function(a,c,d,e){this._super(a,c,d,e);var f=b(this,"modelCache");f.replace(c,d)},objectAtContent:function(a){var c=b(this,"modelCache"),d=c.objectAt(a);if(!d){var e=b(this,"store"),f=b(this,"content"),g=f.objectAt(a);g!==undefined&&(d=e.findByClientId(b(this,"type"),g),c.replace(a,1,[d]))}return d}})}({}),function(a){var b=Ember.get;DS.FilteredModelArray=DS.ModelArray.extend({filterFunction:null,replace:function(){var a=b(this,"type").toString();throw new Error("The result of a client-side filter (on "+a+") is immutable.")},updateFilter:Ember.observer(function(){var a=b(this,"store");a.updateModelArrayFilter(this,b(this,"type"),b(this,"filterFunction"))},"filterFunction")})}({}),function(a){var b=Ember.get,c=Ember.set;DS.AdapterPopulatedModelArray=DS.ModelArray.extend({query:null,isLoaded:!1,replace:function(){var a=b(this,"type").toString();throw new Error("The result of a server query (on "+a+") is immutable.")},load:function(a){var d=b(this,"store"),e=b(this,"type"),f=d.loadMany(e,a).clientIds;this.beginPropertyChanges(),c(this,"content",Ember.A(f)),c(this,"isLoaded",!0),this.endPropertyChanges()}})}({}),function(a){var b=Ember.get,c=Ember.set;DS.ManyArray=DS.ModelArray.extend({parentRecord:null,replace:function(a,c,d){var e=b(this,"parentRecord"),f=e&&!b(e,"id");d=d.map(function(a){return f&&a.send("waitingOn",e),a.get("clientId")}),this._super(a,c,d)}})}({}),function(a){}({}),function(a){var b=Ember.get,c=Ember.set,d=Ember.getPath,e=Ember.String.fmt;DS.Transaction=Ember.Object.extend({init:function(){c(this,"buckets",{clean:Ember.Map.create(),created:Ember.Map.create(),updated:Ember.Map.create(),deleted:Ember.Map.create()})},createRecord:function(a,c){var d=b(this,"store");return d.createRecord(a,c,this)},add:function(a){var c=b(a,"transaction"),e=d(this,"store.defaultTransaction");this.adoptRecord(a)},remove:function(a){var b=d(this,"store.defaultTransaction");b.adoptRecord(a)},adoptRecord:function(a){var d=b(a,"transaction");d&&d.removeFromBucket("clean",a),this.addToBucket("clean",a),c(a,"transaction",this)},modelBecameDirty:function(a,b){this.removeFromBucket("clean",b),this.addToBucket(a,b)},addToBucket:function(a,c){var d=b(b(this,"buckets"),a),e=c.constructor,f=d.get(e);f||(f=Ember.OrderedSet.create(),d.set(e,f)),f.add(c)},removeFromBucket:function(a,c){var d=b(b(this,"buckets"),a),e=c.constructor,f=d.get(e);f.remove(c)},modelBecameClean:function(a,b){this.removeFromBucket(a,b);var c=d(this,"store.defaultTransaction");c.adoptRecord(b)},commit:function(){var a=b(this,"buckets"),c=function(c,d,e){var f=b(a,c);f.forEach(function(a,c){if(c.isEmpty())return;var f=[];c.forEach(function(a){a.send("willCommit"),b(a,"isPending")===!1&&f.push(a)}),d.call(e,a,f)})},d={updated:{eachType:function(a,b){c("updated",a,b)}},created:{eachType:function(a,b){c("created",a,b)}},deleted:{eachType:function(a,b){c("deleted",a,b)}}},f=b(this,"store"),g=b(f,"_adapter"),h=b(a,"clean"),i=b(f,"defaultTransaction");h.forEach(function(a,b){b.forEach(function(a){this.remove(a)},this)},this);if(g&&g.commit)g.commit(f,d);else throw e("Adapter is either null or do not implement `commit` method",this)}})}({}),function(a){var b=Ember.get,c=Ember.set,d=Ember.getPath,e=Ember.String.fmt,f={get:function(a){return this.savedData[a]}};DS.Store=Ember.Object.extend({init:function(){var a=b(this,"revision");if(a!==DS.CURRENT_API_REVISION&&!Ember.ENV.TESTING)throw new Error("Error: The Ember Data library has had breaking API changes since the last time you updated the library. Please review the list of breaking changes at https://github.com/emberjs/data/blob/master/BREAKING_CHANGES.md, then update your store's `revision` property to "+DS.CURRENT_API_REVISION);return(!b(DS,"defaultStore")||b(this,"isDefaultStore"))&&c(DS,"defaultStore",this),c(this,"_typeMap",{}),c(this,"recordCache",[]),c(this,"modelArrays",[]),c(this,"modelArraysByClientId",{}),c(this,"defaultTransaction",this.transaction()),this._super()},transaction:function(){return DS.Transaction.create({store:this})},modelArraysForClientId:function(a){var c=b(this,"modelArraysByClientId"),d=c[a];return d||(d=c[a]=Ember.OrderedSet.create()),d},adapter:null,_adapter:Ember.computed(function(){var a=b(this,"adapter");return typeof a=="string"?d(this,a,!1)||d(window,a):a}).property("adapter").cacheable(),clientIdCounter:-1,createRecord:function(a,d,e){d=d||{};var f=a._create({store:this});e=e||b(this,"defaultTransaction"),e.adoptRecord(f);var g=d[b(f,"primaryKey")]||null,h={},i;i=this.pushHash(h,g,a),f.send("didChangeData");var j=b(this,"recordCache");return c(f,"clientId",i),j[i]=f,f.setProperties(d),this.updateModelArrays(a,i,b(f,"data")),f},deleteRecord:function(a){a.send("deleteRecord")},find:function(a,b,c){if(b===undefined)return this.findAll(a);if(c!==undefined)return this.findMany(a,b,c);if(Ember.typeOf(b)==="object")return this.findQuery(a,b);if(Ember.isArray(b))return this.findMany(a,b);var d=this.clientIdForId(a,b);return this.findByClientId(a,d,b)},findByClientId:function(a,c,d){var f,g=b(this,"recordCache"),h=this.clientIdToHashMap(a);if(c!==undefined)f=g[c],f||(f=this.materializeRecord(a,c),h[c]&&f.send("didChangeData"));else{c=this.pushHash(null,d,a),f=this.materializeRecord(a,c);var i=b(this,"_adapter");if(i&&i.find)i.find(this,a,d);else throw e("Adapter is either null or does not implement `find` method",this)}return f},findMany:function(a,c,d){var f=this.idToClientIdMap(a),g=this.clientIdToHashMap(a),h,i=Ember.A([]);c?(h=[],c.forEach(function(b){var c=f[b];if(c===undefined||g[c]===undefined)c=this.pushHash(null,b,a),h.push(b);i.push(c)},this)):h=null;if(h&&b(h,"length")>0||d){var j=b(this,"_adapter");if(j&&j.findMany)j.findMany(this,a,h,d);else throw e("Adapter is either null or does not implement `findMany` method",this)}return this.createManyArray(a,i)},findQuery:function(a,c){var d=DS.AdapterPopulatedModelArray.create({type:a,content:Ember.A([]),store:this}),f=b(this,"_adapter");if(f&&f.findQuery)f.findQuery(this,a,c,d);else throw e("Adapter is either null or does not implement `findQuery` method",this);return d},findAll:function(a){var c=this.typeMapFor(a),d=c.findAllCache;if(d)return d;var e=DS.ModelArray.create({type:a,content:Ember.A([]),store:this});this.registerModelArray(e,a);var f=b(this,"_adapter");return f&&f.findAll&&f.findAll(this,a),c.findAllCache=e,e},filter:function(a,b,c){arguments.length===3?this.findQuery(a,b):arguments.length===2&&(c=b);var d=DS.FilteredModelArray.create({type:a,content:Ember.A([]),store:this,filterFunction:c});return this.registerModelArray(d,a,c),d},hashWasUpdated:function(a,c,d){this.updateModelArrays(a,c,b(d,"data"))},commit:function(){var a=b(this,"defaultTransaction");c(this,"defaultTransaction",this.transaction()),a.commit()},didUpdateRecords:function(a,b){b?a.forEach(function(a,c){this.didUpdateRecord(a,b[c])},this):a.forEach(function(a){this.didUpdateRecord(a)},this)},didUpdateRecord:function(a,c){if(c){var d=b(a,"clientId"),e=this.clientIdToHashMap(a.constructor);e[d]=c,a.send("didChangeData")}a.send("didCommit")},didDeleteRecords:function(a){a.forEach(function(a){a.send("didCommit")})},didDeleteRecord:function(a){a.send("didCommit")},_didCreateRecord:function(a,c,d,e,f,g,h){var i=b(a,"data"),j,k;c?(d[e]=c,a.beginPropertyChanges(),a.send("didChangeData"),i.adapterDidUpdate(c),a.endPropertyChanges(),j=c[f],g[j]=e,h.push(j)):i.commit(),a.send("didCommit")},didCreateRecords:function(a,c,e){var f,g,h=d(a,"proto.primaryKey"),i=this.idToClientIdMap(a),j=this.clientIdToHashMap(a),k=this.idList(a);for(var l=0,m=b(c,"length");l<m;l++){var n=c[l],o=e[l];g=b(n,"clientId"),this._didCreateRecord(n,o,j,g,h,i,k)}},didCreateRecord:function(a,c){var e=a.constructor,f,g,h,i=this.idToClientIdMap(e),j=this.clientIdToHashMap(e),k=this.idList(e);h=d(e,"proto.primaryKey"),!c,g=b(a,"clientId"),this._didCreateRecord(a,c,j,g,h,i,k)},recordWasInvalid:function(a,b){a.send("becameInvalid",b)},registerModelArray:function(a,c,d){var e=b(this,"modelArrays");e.push(a),this.updateModelArrayFilter(a,c,d)},createManyArray:function(a,b){var c=DS.ManyArray.create({type:a,content:b,store:this});return b.forEach(function(a){var b=this.modelArraysForClientId(a);b.add(c)},this),c},updateModelArrayFilter:function(a,c,d){var e=this.clientIdToHashMap(c),g=this.clientIdList(c),h,i,j,k=b(this,"recordCache"),l;for(var m=0,n=g.length;m<n;m++){h=g[m],i=e[h];if(i=e[h])(l=k[h])?j=b(l,"data"):(f.savedData=i,j=f),this.updateModelArray(a,d,c,h,j)}},updateModelArrays:function(a,c,d){var e=b(this,"modelArrays"),f,g;e.forEach(function(e){f=b(e,"type"),g=b(e,"filterFunction");if(a!==f)return;this.updateModelArray(e,g,a,c,d)},this)},updateModelArray:function(a,c,d,e,f){var g;c?g=c(f):g=!0;var h=b(a,"content"),i=h.indexOf(e)!==-1,j=this.modelArraysForClientId(e);g&&!i?(j.add(a),h.pushObject(e)):!g&&i&&(j.remove(a),h.removeObject(e))},removeFromModelArrays:function(a){var c=b(a,"clientId"),d=this.modelArraysForClientId(c);d.forEach(function(a){var d=b(a,"content");d.removeObject(c)})},typeMapFor:function(a){var c=b(this,"_typeMap"),d=Ember.guidFor(a),e=c[d];return e?e:c[d]={idToCid:{},idList:[],cidList:[],cidToHash:{}}},idToClientIdMap:function(a){return this.typeMapFor(a).idToCid},idList:function(a){return this.typeMapFor(a).idList},clientIdList:function(a){return this.typeMapFor(a).cidList},clientIdToHashMap:function(a){return this.typeMapFor(a).cidToHash},dataForClientId:function(a,b){return this.clientIdToHashMap(a)[b]},clientIdForId:function(a,b){return this.typeMapFor(a).idToCid[b]},idForHash:function(a,b){var c=d(a,"proto.primaryKey");return b[c]},load:function(a,c,e){if(e===undefined){e=c;var g=d(a,"proto.primaryKey");c=e[g]}var h=this.clientIdToHashMap(a),i=b(this,"recordCache"),j=this.clientIdForId(a,c);if(j!==undefined){h[j]=e;var k=i[j];k&&k.send("didChangeData")}else j=this.pushHash(e,c,a);return f.savedData=e,this.updateModelArrays(a,j,f),{id:c,clientId:j}},loadMany:function(a,c,e){var f=Ember.A([]);if(e===undefined){e=c,c=[];var g=d(a,"proto.primaryKey");c=e.map(function(a){return a[g]})}for(var h=0,i=b(c,"length");h<i;h++){var j=this.load(a,c[h],e[h]);f.pushObject(j.clientId)}return{clientIds:f,ids:c}},pushHash:function(a,b,c){var d=this.idToClientIdMap(c),e=this.clientIdList(c),f=this.idList(c),g=this.clientIdToHashMap(c),h=this.incrementProperty("clientIdCounter");return g[h]=a,b&&(d[b]=h,f.push(b)),e.push(h),h},materializeRecord:function(a,c){var d;return b(this,"recordCache")[c]=d=a._create({store:this,clientId:c}),b(this,"defaultTransaction").adoptRecord(d),d.send("loadingData"),d},destroy:function(){return b(DS,"defaultStore")===this&&c(DS,"defaultStore",null),this._super()}})}({}),function(a){var b=Ember.get,c=Ember.set,d=Ember.getPath,e=Ember.guidFor,f=Ember.computed(function(a){var c=b(this,"parentState");if(c)return b(c,a)}).property(),g=function(a){for(var b in a)if(a.hasOwnProperty(b))return!1;return!0},h=function(a){for(var b in a)if(a.hasOwnProperty(b)&&a[b])return!0;return!1};DS.State=Ember.State.extend({isLoaded:f,isDirty:f,isSaving:f,isDeleted:f,isError:f,isNew:f,isValid:f,isPending:f,dirtyType:f});var i=function(a,d){var e=d.key,f=d.value,g=b(a,"model"),h=b(g,"data");c(h,e,f)},j=function(a){var c=b(a,"model"),d=b(c,"data");d._savedData=null,c.notifyPropertyChange("data")},k=function(a,c){var d=b(a,"model"),f=b(d,"pendingQueue"),g=e(c),h=function(){b(c,"id")&&(a.send("doneWaitingOn",c),Ember.removeObserver(c,"id",h))};f[g]=[c,h],Ember.addObserver(c,"id",h)},l=Ember.Mixin.create({setProperty:i,deleteRecord:function(a){this._super(a);var c=b(a,"model"),d=b(this,"dirtyType");c.withTransaction(function(a){a.modelBecameClean(d,c)})}}),m=Ember.Mixin.create({deleteRecord:function(a){this._super(a),a.goToState("deleted.saved")}}),n=Ember.Mixin.create({deleteRecord:function(a){this._super(a);var c=b(a,"model");c.withTransaction(function(a){a.modelBecameClean("created",c)}),a.goToState("deleted")}}),o=DS.State.extend({initialState:"uncommitted",isDirty:!0,uncommitted:DS.State.extend({enter:function(a){var c=b(this,"dirtyType"),d=b(a,"model");d.withTransaction(function(a){a.modelBecameDirty(c,d)})},exit:function(a){var c=b(a,"model");a.send("invokeLifecycleCallbacks",c)},deleteRecord:Ember.K,waitingOn:function(a,b){k(a,b),a.goToState("pending")},willCommit:function(a){a.goToState("inFlight")}},l),inFlight:DS.State.extend({isSaving:!0,enter:function(a){var c=b(this,"dirtyType"),d=b(a,"model");d.withTransaction(function(a){a.modelBecameClean(c,d)})},didCommit:function(a){a.goToState("loaded")},becameInvalid:function(a,d){var e=b(a,"model");c(e,"errors",d),a.goToState("invalid")},didChangeData:j}),pending:DS.State.extend({initialState:"uncommitted",isPending:!0,uncommitted:DS.State.extend({deleteRecord:function(a){var c=b(a,"model"),d=b(c,"pendingQueue"),e;for(var f in d){if(!d.hasOwnProperty(f))continue;e=d[f],Ember.removeObserver(e[0],"id",e[1])}},willCommit:function(a){a.goToState("committing")},doneWaitingOn:function(a,c){var d=b(a,"model"),f=b(d,"pendingQueue"),h=e(c);delete f[h],g(f)&&a.send("doneWaiting")},doneWaiting:function(a){var c=b(this,"dirtyType");a.goToState(c+".uncommitted")}},l),committing:DS.State.extend({isSaving:!0,doneWaitingOn:function(a,c){var d=b(a,"model"),f=b(d,"pendingQueue"),h=e(c);delete f[h],g(f)&&a.send("doneWaiting")},doneWaiting:function(a){var c=b(a,"model"),d=b(c,"transaction");Ember.run.once(d,d.commit)},willCommit:function(a){var c=b(this,"dirtyType");a.goToState(c+".inFlight")}})}),invalid:DS.State.extend({isValid:!1,deleteRecord:function(a){a.goToState("deleted")},setProperty:function(a,c){i(a,c);var d=b(a,"model"),e=b(d,"errors"),f=c.key;delete e[f],h(e)||a.send("becameValid")},becameValid:function(a){a.goToState("uncommitted")}})}),p=o.create({dirtyType:"created",isNew:!0,invokeLifecycleCallbacks:function(a,b){b.didCreate()}}),q=o.create({dirtyType:"updated",invokeLifecycleCallbacks:function(a,b){b.didUpdate()}});p.states.uncommitted.reopen(m),p.states.pending.states.uncommitted.reopen(m),q.states.uncommitted.reopen(n),q.states.pending.states.uncommitted.reopen(n);var r={rootState:Ember.State.create({isLoaded:!1,isDirty:!1,isSaving:!1,isDeleted:!1,isError:!1,isNew:!1,isValid:!0,isPending:!1,empty:DS.State.create({loadingData:function(a){a.goToState("loading")},didChangeData:function(a){j(a),a.goToState("loaded.created")}}),loading:DS.State.create({exit:function(a){var c=b(a,"model");c.didLoad()},didChangeData:function(a,b){j(a),a.send("loadedData")},loadedData:function(a){a.goToState("loaded")}}),loaded:DS.State.create({initialState:"saved",isLoaded:!0,saved:DS.State.create({setProperty:function(a,b){i(a,b),a.goToState("updated")},didChangeData:j,deleteRecord:function(a){a.goToState("deleted")},waitingOn:function(a,b){k(a,b),a.goToState("updated.pending")}}),created:p,updated:q}),deleted:DS.State.create({isDeleted:!0,isLoaded:!0,isDirty:!0,start:DS.State.create({enter:function(a){var c=b(a,"model"),d=b(c,"store");d&&d.removeFromModelArrays(c),c.withTransaction(function(a){a.modelBecameDirty("deleted",c)})},willCommit:function(a){a.goToState("inFlight")}}),inFlight:DS.State.create({isSaving:!0,exit:function(a){var c=b(a,"model");c.withTransaction(function(a){a.modelBecameClean("deleted",c)})},didCommit:function(a){a.goToState("saved")}}),saved:DS.State.create({isDirty:!1})}),error:DS.State.create({isError:!0})})};DS.StateManager=Ember.StateManager.extend({model:null,initialState:"rootState",states:r})}({}),function(a){var b=Ember.get,c=Ember.set,d=Ember.getPath,e=Ember.computed(function(a){return b(d(this,"stateManager.currentState"),a)}).property("stateManager.currentState").cacheable(),f=function(a){this.record=a,this.unsavedData={}};f.prototype={get:function(a){return Ember.get(this,a)},set:function(a,b){return Ember.set(this,a,b)},savedData:function(){var a=this._savedData;if(a)return a;var c=this.record,d=b(c,"clientId"),e=b(c,"store");if(e)return a=e.dataForClientId(c.constructor,d),this._savedData=a,a},unknownProperty:function(a){var b=this.unsavedData,c=this.savedData(),d=b[a];return c&&d===undefined&&(d=c[a]),d},setUnknownProperty:function(a,b){var c=this.record,d=this.unsavedData;return d[a]=b,Ember.run.once(c,c.notifyHashWasUpdated),b},commit:function(){var a=this.record,b=this.unsavedData,c=this.savedData();for(var d in b)b.hasOwnProperty(d)&&(c[d]=b[d],delete b[d]);a.notifyPropertyChange("data")},rollback:function(){this.unsavedData={}},adapterDidUpdate:function(a){this.unsavedData={}}},DS.Model=Ember.Object.extend({isLoaded:e,isDirty:e,isSaving:e,isDeleted:e,isError:e,isNew:e,isPending:e,isValid:e,clientId:null,transaction:null,stateManager:null,pendingQueue:null,errors:null,primaryKey:"id",id:Ember.computed(function(a,d){var e=b(this,"primaryKey"),f=b(this,"data");return arguments.length===2?(c(f,e,d),d):f&&b(f,e)}).property("primaryKey","data"),toJSON:function(){var a=b(this,"data"),c={},d=this.constructor,e=b(d,"attributes"),f=b(d,"associationsByName"),g=b(this,"primaryKey"),h=b(this,"id");return h&&(c[g]=h),e.forEach(function(d,e){var f=e.options.key||d,g=b(a,f);g===undefined&&(g=e.options.defaultValue),c[f]=g},this),c},data:Ember.computed(function(){return new f(this)}).cacheable(),didLoad:Ember.K,didUpdate:Ember.K,didCreate:Ember.K,init:function(){var a=DS.StateManager.create({model:this});c(this,"pendingQueue",{}),c(this,"stateManager",a),a.goToState("empty")},destroy:function(){b(this,"isDeleted")||this.deleteRecord(),this._super()},send:function(a,c){return b(this,"stateManager").send(a,c)},withTransaction:function(a){var c=b(this,"transaction");c&&a(c)},setProperty:function(a,b){this.send("setProperty",{key:a,value:b})},deleteRecord:function(){this.send("deleteRecord")},waitingOn:function(a){this.send("waitingOn",a)},notifyHashWasUpdated:function(){var a=b(this,"store");a&&a.hashWasUpdated(this.constructor,b(this,"clientId"),this)},unknownProperty:function(a){var c=b(this,"data");!(c&&a in c)},setUnknownProperty:function(a,c){var d=b(this,"data");if(!(d&&a in d))return this._super(a,c)}});var g=function(a){return function(){var c=b(DS,"defaultStore"),d=[].slice.call(arguments);return d.unshift(this),c[a].apply(c,d)}};DS.Model.reopenClass({find:g("find"),filter:g("filter"),_create:DS.Model.create,create:function(){throw new Ember.Error("You should not call `create` on a model. Instead, call `createRecord` with the attributes you would like to set.")},createRecord:g("createRecord")})}({}),function(a){var b=Ember.get,c=Ember.getPath;DS.Model.reopenClass({attributes:Ember.computed(function(){var a=Ember.Map.create();return this.eachComputedProperty(function(b,c){c.isAttribute&&a.set(b,c)}),a}).cacheable()}),DS.attr=function(a,c){var d=DS.attr.transforms[a],e=d.from,f=d.to;c=c||{};var g={type:a,isAttribute:!0,options:c};return Ember.computed(function(a,d){var g;return a=c.key||a,arguments.length===2?(d=f(d),this.setProperty(a,d)):(g=b(this,"data"),d=b(g,a),d===undefined&&(d=c.defaultValue)),e(d)}).property("data").cacheable().meta(g)},DS.attr.transforms={string:{from:function(a){return Ember.none(a)?null:String(a)},to:function(a){return Ember.none(a)?null:String(a)}},integer:{from:function(a){return Ember.none(a)?null:Number(a)},to:function(a){return Ember.none(a)?null:Number(a)}},"boolean":{from:function(a){return Boolean(a)},to:function(a){return Boolean(a)}},date:{from:function(a){var b=typeof a;return b==="string"||b==="number"?new Date(a):a===null||a===undefined?a:null},to:function(a){if(a instanceof Date){var b=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],c=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],d=function(a){return a<10?"0"+a:""+a},e=a.getUTCFullYear(),f=a.getUTCMonth(),g=a.getUTCDate(),h=a.getUTCDay(),i=a.getUTCHours(),j=a.getUTCMinutes(),k=a.getUTCSeconds(),l=b[h],m=d(g),n=c[f];return l+", "+m+" "+n+" "+e+" "+d(i)+":"+d(j)+":"+d(k)+" GMT"}return a===undefined?undefined:null}}}}({}),function(a){var b=Ember.get,c=Ember.set,d=Ember.getPath;DS.Model.reopenClass({typeForAssociation:function(a){return Ember.get(this,"associationsByName")[a]},associations:Ember.computed(function(){var a=Ember.Map.create();return this.eachComputedProperty(function(b,c){if(c.isAssociation){var e=c.type,f=a.get(e);typeof e=="string"&&(e=d(this,e,!1)||d(window,e)),f||(f=[],a.set(e,f)),f.push({name:b,kind:c.kind})}}),a}).cacheable(),associationsByName:Ember.computed(function(){var a={},b;return this.eachComputedProperty(function(c,e){e.isAssociation&&(b=e.type,typeof b=="string"&&(b=d(this,b,!1)||d(window,b)),a[c]=b)}),a}).cacheable()});var e=function(a,c,d,e,f){var g=d?b(d,e):f?null:[];return f?g?a.load(c,g).id:null:g?a.loadMany(c,g).ids:[]},f=function(a,c,d,e,f){return d?b(d,e):f?null:[]},g=function(a,g,h){var i=g&&g.embedded,j=i?e:f,k={type:a,isAssociation:!0};return h?k.kind="belongsTo":k.kind="hasMany",Ember.computed(function(e,f){var i=b(this,"data"),k,l,m,n=b(this,"store");return typeof a=="string"&&(a=d(this,a,!1)||d(window,a)),e=g&&g.key?g.key:e,h?(l=j(n,a,i,e,!0),m=l?n.find(a,l):null):(k=j(n,a,i,e),m=n.findMany(a,k),c(m,"parentRecord",this)),m}).property("data").cacheable().meta(k)};DS.hasMany=function(a,b){return g(a,b)},DS.hasOne=function(a,b){return g(a,b,!0)},DS.belongsTo=DS.hasOne}({}),function(a){}({}),function(a){}({})
